defaults: &defaults
  docker:
    - image: circleci/node:12
  working_directory: ~/project

version: 2
jobs:
  Checkout Code:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - restore_cache:
          keys:
            - yarn-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-cache-{{ .Branch }}
            - yarn-cache-
      - run: yarn install
      - run: yarn build
      - save_cache:
          key: yarn-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: .
          paths:
            - .
  Check for vulnerabilities:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run: yarn install
      - run: yarn validate:dependencies
  Build (tag):
    <<: *defaults
    steps:
      - setup_remote_docker:
          # docker_layer_caching: true
          version: 18.06.0-ce
      - attach_workspace:
          at: ~/project
      - run:
          name: Build Docker Image
          command: docker build -f Dockerfile . -t superflytv/sofie-spreadsheet-gateway:$CIRCLE_TAG
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push superflytv/sofie-spreadsheet-gateway:$CIRCLE_BRANCH
  Build (branch):
    <<: *defaults
    steps:
      - setup_remote_docker:
          # docker_layer_caching: true
          version: 18.06.0-ce
      - attach_workspace:
          at: ~/project
      - run:
          name: Build Docker Image
          command: docker build -f Dockerfile . -t superflytv/sofie-spreadsheet-gateway:$CIRCLE_BRANCH
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push superflytv/sofie-spreadsheet-gateway:$CIRCLE_BRANCH
  Test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run: yarn install
      - run: yarn test
      - run: yarn build
  Send Coverage:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run: yarn install
      - run: yarn send-coverage
      - store_artifacts:
          path: ./coverage/clover.xml
          prefix: tests
      - store_artifacts:
          path: coverage
          prefix: coverage
      - store_test_results:
          path: ./coverage/clover.xml
  Git Release:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - add_ssh_keys:
          fingerprints:
            - "c3:ca:91:e7:34:5a:e6:21:79:13:59:dd:fa:a1:ea:0c"
      - run: yarn install
      - run: mkdir -p ~/.ssh
      - run:
          name: Keyscan Github
          command: ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      - run: git config --global user.email "info@superfly.tv"
      - run: git config --global user.name "superflytvab"
      - run: yarn release
      - run: git push --follow-tags origin HEAD
      - persist_to_workspace:
          root: .
          paths: 
            - .

workflows:
  version: 2
  Test build and deploy:
    jobs:
      - Checkout Code:
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - Check for vulnerabilities:
          requires:
            - Checkout Code
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - Test:
          requires:
            - Checkout Code
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - Build (tag):
          requires:
            - Check for vulnerabilities
            - Test
          filters:
            tags:
              only: /v.*/
            branches:
              ignore: /.*/
      - Build (branch):
          requires:
            - Check for vulnerabilities
            - Test
          filters:
            branches:
              only:
                - master
                - develop
      - Send Coverage:
          requires:
            - Check for vulnerabilities
            - Test
          filters:
            branches:
              only:
                - master
      - Git Release:
          requires:
            - Send Coverage
          filters:
            branches:
              only:
              - master